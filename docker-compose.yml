services:
  # nginx reverse proxy
  # nginx-proxy:
  #   image: jwilder/nginx-proxy
  #   container_name: nginx-proxy
  #   restart: always
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #     - ./certs:/etc/nginx/certs
  #     - ./vhost:/etc/nginx/vhost.d
  #     - ./html:/usr/share/nginx/html

  # Database
  db:
    image: mongo:8.0
    container_name: db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - 27017:27017
    volumes:
      - ./data:/data/db

  # Next.js frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: junkaizhang8/collabpen-frontend:latest
    container_name: frontend
    restart: always
    ports:
      - 3000:3000
    # environment:
    #   - VIRTUAL_HOST=localhost
    #   - LETSENCRYPT_HOST=${FRONTEND_HOST}

  # Express.js backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: junkaizhang8/collabpen-backend:latest
    container_name: backend
    restart: always
    depends_on:
      - db
    ports:
      - 4000:4000
    # environment:
    #   - VIRTUAL_HOST=${BACKEND_HOST}
    #   - LETSENCRYPT_HOST=${BACKEND_HOST}

  # y-websocket
  y-websocket:
    image: nodesource/node:20-slim
    container_name: y-websocket
    working_dir: /app
    restart: always
    entrypoint: ["npx", "y-websocket", "--host", "0.0.0.0", "--port", "1234"]
    ports:
      - 1234:1234
