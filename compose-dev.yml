services:
  # MongoDB database
  db:
    image: mongo:8.0
    container_name: db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - 27017:27017
    volumes:
      - ./data:/data/db

  # y-websocket server
  y-websocket:
    image: node:18-slim
    container_name: y-websocket
    working_dir: /app
    entrypoint: ["npx", "y-websocket@2.1.0"]
    environment:
      - HOST=0.0.0.0
      - PORT=1234
    ports:
      - 1234:1234
  
  # Redis
  redis:
    image: redis:7.2-alpine
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - ./redis-data:/data

  # Next.js frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: frontend
    command: ["nodemon", "--watch", "package.json", "--exec", "npm i && npm run dev"]
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Express.js backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: backend
    command: ["nodemon", "--watch", "package.json", "--exec", "npm i && npm run dev"]
    environment:
      - MONGO_HOST=db
      - REDIS_HOST=redis
    ports:
      - 4000:4000
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - db
