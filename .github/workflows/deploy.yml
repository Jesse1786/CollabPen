name: Deploy to Virtual Machine

on:
  push:
    branches:
      - prod
env:
  FRONTEND_IMAGE: ${{ secrets.DOCKER_USERNAME }}/collabpen-frontend:latest
  BACKEND_IMAGE: ${{ secrets.DOCKER_USERNAME }}/collabpen-backend:latest

jobs:
  push-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build frontend image
        run: |
          echo "${{ secrets.FRONTEND_ENV }}" > .env
          docker build -t $FRONTEND_IMAGE .

      - name: Push frontend image to Docker Hub
        run: |
          docker push $FRONTEND_IMAGE

  push-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build backend image
        run: |
          echo "${{ secrets.BACKEND_ENV }}" > .env
          docker build -t $BACKEND_IMAGE .

      - name: Push backend image to Docker Hub
        run: |
          docker push $BACKEND_IMAGE

  deploy:
    runs-on: ubuntu-latest
    needs: [push-frontend, push-backend]
    steps:
      - name: Pull images on virtual machine
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            docker compose down --remove-orphans
            echo "${{ secrets.ROOT_ENV }}" > ~/.env
            docker compose pull
            docker rmi $(docker images --filter "dangling=true" -q --no-trunc)
            docker compose up -d
